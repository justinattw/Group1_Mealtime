# Python CircleCI 2.0 configuration file

# The following code is informed by and adapted from the CircleCI documentations
#
# Title: Configuring a Python Application on CircleCI
# Author: CircleCI
# Date: 2020
# Availability: https://circleci.com/docs/2.0/language-python/
# Accessed: 16 March 2020

version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` suffix for selenium tests, e.g. `3.6.1-browsers`
#      - image: circleci/python:3.7.4-stretch-browsers
      - image: circleci/python:3.7.4-stretch-jessie-node-browsers

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Sauce Labs and Set Up Tunnel
          background: true
          command: |
            curl https://saucelabs.com/downloads/sc-4.4.12-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            cd sc-*
            bin/sc -u ${SAUCELABS_USER} -k ${SAUCELABS_KEY}
            wget --retry-connrefused --no-check-certificate -T 60 localhost:4445  # wait for app to be ready
      - run: # base image is python, so we run `nosetests`, an extension of `unittest`
          command: nosetests
      - run:
          name: Shut Down Sauce Connect Tunnel
          command: |
            kill -9 `cat /tmp/sc_client.pid`

#        environment:
#          FLASK_CONFIG: testing
#          TEST_DATABASE_URL: 'sqlite:///db/mealtime_testing.sqlite'

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

#    steps:
      - checkout
      - run: mkdir test-reports
      - run: mkdir test-results
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      # For browser testing
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest test

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-reports
          destination: test-reports



#      - run:
#          name: Setup Heroku
#          command: |
#            chmod +x .circleci/setup-heroku.sh
#            .circleci/setup-heroku.sh
#      - run:
#          name: Deploy to Heroku
#          command: |
#            cd app/
#            git push heroku master
#
#orbs:
#  heroku: circleci/heroku@0.0.10
#workflows:
#  heroku_deploy:
#    jobs:
#      - heroku/deploy-via-git

