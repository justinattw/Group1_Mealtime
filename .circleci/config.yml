# Python CircleCI 2.0 configuration file

# The following code is informed by and adapted from the CircleCI documentations
#
# Title: Configuring a Python Application on CircleCI
# Author: CircleCI
# Date: 2020
# Availability: https://circleci.com/docs/2.0/language-python/
# Accessed: 16 March 2020

version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` suffix for selenium tests, e.g. `3.6.1-browsers`
#      - image: circleci/python:3.7.4-stretch-browsers
      - image: circleci/python:jessie-node-browsers

    working_directory: ~/repo

    dependencies:
      post:
        - wget https://saucelabs.com/downloads/sc-latest-linux.tar.gz
        - tar -xzf sc-latest-linux.tar.gz

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      # For browser testing
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar


      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      test:
        override:
          - cd sc-*-linux && ./bin/sc --user $SAUCE_USERNAME --api-key $SAUCE_ACCESS_KEY --readyfile ~/sauce_is_ready:
              background: true
          # Wait for tunnel to be ready
          - while [ ! -e ~/sauce_is_ready ]; do sleep 1; done
          - python -m hello.hello_app:
              background: true
          # Wait for app to be ready
          - curl --retry 10 --retry-delay 2 -v http://localhost:5000
          # Run selenium tests
          - . venv/bin/activate
            python -m pytest test

        post:
          - killall --wait sc  # wait for Sauce Connect to close the tunnel

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: Shut Down Sauce Connect Tunnel
          command: |
            kill -9 `cat /tmp/sc_client.pid`



